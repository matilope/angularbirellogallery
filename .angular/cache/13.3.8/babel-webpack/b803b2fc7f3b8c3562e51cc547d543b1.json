{"ast":null,"code":"import { Portrait } from '../../models/portrait';\nimport { PortraitService } from '../../services/portrait.service';\nimport { Global } from '../../services/global';\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/portrait.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-file-uploader\";\n\nfunction PortadaComponent_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 17);\n    i0.ɵɵtext(1, \"Titulo no es valido\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortadaComponent_div_18_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 22);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r4.portrait.image0url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r4.portrait.titulo);\n  }\n}\n\nfunction PortadaComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"label\", 19);\n    i0.ɵɵtext(2, \"Imagen subida:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵtemplate(4, PortadaComponent_div_18_img_4_Template, 1, 2, \"img\", 21);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.portrait.image0url);\n  }\n}\n\nexport let PortadaComponent = /*#__PURE__*/(() => {\n  class PortadaComponent {\n    constructor(_portraitService, _route, _router, metaService) {\n      this._portraitService = _portraitService;\n      this._route = _route;\n      this._router = _router;\n      this.metaService = metaService;\n      this.afuConfig = {\n        multiple: true,\n        formatsAllowed: \".jpg,.png,.gif,.jpeg,.webp\",\n        maxSize: \"50\",\n        uploadAPI: {\n          url: Global.url + \"portrait/upload\",\n          method: \"POST\"\n        },\n        theme: \"attachPin\",\n        hideProgressBar: true,\n        hideResetBtn: true,\n        hideSelectBtn: false,\n        fileNameIndex: true,\n        replaceTexts: {\n          selectFileBtn: 'Elegi el archivo',\n          resetBtn: 'Resetear',\n          uploadBtn: 'Subir',\n          dragNDropBox: 'Agarra y dejalo',\n          attachPinBtn: 'Sube imagen de portada..',\n          afterUploadMsg_success: 'Subido exitosamente',\n          afterUploadMsg_error: 'Algo fallo',\n          sizeLimit: 'Limite de tamaño'\n        }\n      };\n      this.portrait = new Portrait(\"\", \"\", \"\", null);\n      this.title = \"Editar portada\";\n      this.subtitle = \"Puede editar los datos\";\n      this.is_update = true;\n      this.url = Global.url;\n      this.metaService.addTag({\n        name: 'robots',\n        content: 'noindex, nofollow'\n      });\n    }\n\n    ngOnInit() {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n      this.getPortrait();\n    }\n\n    onSubmit() {\n      this.suscripcion = this._portraitService.updatePortrait(this.portrait._id, this.portrait).subscribe({\n        next: response => {\n          if (response.status == \"Success\") {\n            this.status = \"Success\";\n            this.portrait = response.portrait;\n            swal.fire('Se ha editado correctamente', 'Felicidades, todo un exito', 'success');\n            setTimeout(() => {\n              this._router.navigate([\"/admin\"]).then(() => {\n                window.location.reload();\n              });\n            }, 2000);\n          } else {\n            this.status = \"Error\";\n            swal.fire('Ha ocurrido un error al editar la portada', 'Sera redireccionado a la misma pagina para volver intentar editarlo, de todas maneras sugiero que se fije si se edito correctamente', 'warning');\n            setTimeout(() => {\n              this._router.navigate([\"/admin/change/portada/\" + this.portrait._id]);\n            }, 2000);\n          }\n        }\n      });\n    }\n\n    imageUpload(data) {\n      let image0url = data.body.image0url;\n      this.portrait.image0url = image0url;\n    }\n\n    getPortrait() {\n      this.suscripcion2 = this._route.params.subscribe(params => {\n        let portraitId = params['id'];\n        this.suscripcion3 = this._portraitService.getPortrait(portraitId).subscribe({\n          next: response => {\n            if (response.portrait) {\n              this.portrait = response.portrait;\n            }\n          }\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      [this.suscripcion, this.suscripcion2, this.suscripcion3].forEach(e => e === null || e === void 0 ? void 0 : e.unsubscribe());\n    }\n\n  }\n\n  PortadaComponent.ɵfac = function PortadaComponent_Factory(t) {\n    return new (t || PortadaComponent)(i0.ɵɵdirectiveInject(i1.PortraitService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Meta));\n  };\n\n  PortadaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PortadaComponent,\n    selectors: [[\"app-portada\"]],\n    features: [i0.ɵɵProvidersFeature([PortraitService])],\n    decls: 21,\n    vars: 6,\n    consts: [[1, \"portadaupdate\"], [1, \"portadaupdatesection\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"c-col\", \"col-12\", \"col-sm-12\", \"col-md-10\", \"col-lg-8\", \"enquiryform\"], [1, \"center\", \"contactcolor\"], [1, \"center\", \"contactcolor\", \"infocontact\"], [3, \"ngSubmit\"], [\"portraitUpdateForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"Titulo\", 1, \"formlabel\"], [\"type\", \"text\", \"id\", \"Titulo\", \"placeholder\", \"Titulo\", \"maxlength\", \"160\", \"name\", \"titulo\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"titulo\", \"ngModel\"], [\"style\", \"color:rgb(201, 201, 201);\", 4, \"ngIf\"], [\"style\", \"margin-bottom:12px;\", 4, \"ngIf\"], [3, \"config\", \"ApiResponse\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"btn\", \"btn-light\", \"btncustomcontact\", \"boxshadow\"], [2, \"color\", \"rgb(201, 201, 201)\"], [2, \"margin-bottom\", \"12px\"], [\"for\", \"Image\", 1, \"formlabel\"], [1, \"room-preview\"], [\"class\", \"room-active\", 3, \"src\", \"alt\", 4, \"ngIf\"], [1, \"room-active\", 3, \"src\", \"alt\"]],\n    template: function PortadaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\", 0)(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"h3\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", 7, 8);\n        i0.ɵɵlistener(\"ngSubmit\", function PortadaComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"label\", 10);\n        i0.ɵɵtext(13, \"Titulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function PortadaComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.portrait.titulo = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, PortadaComponent_small_16_Template, 2, 0, \"small\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵtemplate(18, PortadaComponent_div_18_Template, 5, 1, \"div\", 14);\n        i0.ɵɵelementStart(19, \"angular-file-uploader\", 15);\n        i0.ɵɵlistener(\"ApiResponse\", function PortadaComponent_Template_angular_file_uploader_ApiResponse_19_listener($event) {\n          return ctx.imageUpload($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"input\", 16);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(15);\n\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.subtitle);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.portrait.titulo);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !_r1.valid && _r1.touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.is_update);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"config\", ctx.afuConfig);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.MaxLengthValidator, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i5.NgIf, i6.AngularFileUploaderComponent],\n    styles: [\"\"]\n  });\n  return PortadaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}