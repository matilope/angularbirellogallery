{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Paintings } from '../../models/paintings';\nimport { PaintingsService } from '../../services/paintings.service';\nimport { Global } from '../../services/global';\nimport swal from 'sweetalert2';\nlet PaintingUpdateComponent = class PaintingUpdateComponent {\n  constructor(_paintingsService, _route, _router, metaService) {\n    this._paintingsService = _paintingsService;\n    this._route = _route;\n    this._router = _router;\n    this.metaService = metaService;\n    this.animation = false;\n    this.afuConfig = {\n      multiple: true,\n      formatsAllowed: '.jpg,.png,.gif,.jpeg,.webp',\n      maxSize: '20',\n      uploadAPI: {\n        url: Global.url + 'create',\n        method: 'POST'\n      },\n      theme: 'attachPin',\n      hideProgressBar: true,\n      hideResetBtn: true,\n      hideSelectBtn: false,\n      fileNameIndex: true,\n      replaceTexts: {\n        selectFileBtn: 'Elegi el archivo',\n        resetBtn: 'Resetear',\n        uploadBtn: 'Subir',\n        dragNDropBox: 'Agarra y dejalo',\n        attachPinBtn: 'Sube la imagen de la pintura..',\n        afterUploadMsg_success: 'Subido exitosamente',\n        afterUploadMsg_error: 'Algo fallo',\n        sizeLimit: 'Limite de tamaño'\n      }\n    };\n    this.paintings = new Paintings('', '', '', '', '', '', '', '', '', '', '', '', '', '', null);\n    this.title = 'Editar pintura';\n    this.subtitle = 'Puede editar los datos';\n    this.is_update = true;\n    this.url = Global.url;\n    this.metaService.addTag({\n      name: 'robots',\n      content: 'noindex, nofollow'\n    });\n  }\n\n  ngOnInit() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n    this.getPintura();\n    this.animation = true;\n  }\n\n  onSubmit() {\n    this.suscripcion = this._paintingsService.update(this.paintings._id, this.paintings).subscribe({\n      next: response => {\n        if (response.status == 'Success') {\n          this.status = 'Success';\n          this.paintings[0] = response.paints;\n          swal.fire('Se ha editado correctamente', 'Felicidades, todo un exito', 'success');\n\n          this._router.navigate(['/painting/view/' + this.paintings._id]);\n        } else {\n          this.status = 'Error';\n          swal.fire('Ha ocurrido un error al editar la pintura', 'Sera redireccionado a la misma pagina para volver intentar editarlo, de todas maneras sugiero que se fije si se edito correctamente', 'warning');\n\n          this._router.navigate(['/admin/update/' + this.paintings._id]);\n        }\n      }\n    });\n  }\n\n  uploadImg(data, index) {\n    this.index = index;\n\n    this._paintingsService.uploadImg(this.paintings, this.index).subscribe({\n      next: response => {\n        console.log(data);\n\n        if (response.status == \"Success\") {\n          if (response.status == \"Success\") {\n            if (response.paints.image0url) {\n              this.paintings.image0url = response.paints.image0url;\n            }\n\n            if (response.paints.image1url) {\n              this.paintings.image1url = response.paints.image1url;\n            }\n\n            if (response.paints.image2url) {\n              this.paintings.image2url = response.paints.image2url;\n            }\n\n            if (response.paints.image3url) {\n              this.paintings.image3url = response.paints.image3url;\n            }\n\n            if (response.paints.image4url) {\n              this.paintings.image4url = response.paints.image4url;\n            }\n\n            if (response.paints.image5url) {\n              this.paintings.image5url = response.paints.image5url;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  deleteImg(data, index) {\n    this.index = index;\n    swal.fire({\n      title: '¿ Estas seguro que quieres eliminar esta imagen ?',\n      text: 'No vas a poder recuperarla',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, quiero eliminarla',\n      cancelButtonText: 'Cancelar'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this._paintingsService.deleteImg(this.paintings, this.index).subscribe({\n          next: response => {\n            if (response.status == \"Success\") {\n              if (response.status == \"Success\") {\n                if (response.paints.image0url) {\n                  this.paintings.image0url = response.paints.image0url;\n                }\n\n                if (response.paints.image1url) {\n                  this.paintings.image1url = response.paints.image1url;\n                }\n\n                if (response.paints.image2url) {\n                  this.paintings.image2url = response.paints.image2url;\n                }\n\n                if (response.paints.image3url) {\n                  this.paintings.image3url = response.paints.image3url;\n                }\n\n                if (response.paints.image4url) {\n                  this.paintings.image4url = response.paints.image4url;\n                }\n\n                if (response.paints.image5url) {\n                  this.paintings.image5url = response.paints.image5url;\n                }\n              }\n            }\n          }\n        });\n\n        swal.fire('Tu imagen se ha eliminado');\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      } else {\n        swal.fire('Tu imagen se ha salvado y no se ha eliminado');\n      }\n    });\n  }\n\n  getPintura() {\n    this.suscripcion2 = this._route.params.subscribe(params => {\n      this.suscripcion3 = this._route.data.subscribe(response => {\n        if (response.painting.paints) {\n          this.paintings = response.painting.paints;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    [this.suscripcion, this.suscripcion2, this.suscripcion3].forEach(e => e === null || e === void 0 ? void 0 : e.unsubscribe());\n    this.animation = false;\n  }\n\n};\nPaintingUpdateComponent = __decorate([Component({\n  selector: 'app-painting-update',\n  templateUrl: './painting-update.component.html',\n  styleUrls: ['./painting-update.component.css'],\n  providers: [PaintingsService]\n})], PaintingUpdateComponent);\nexport { PaintingUpdateComponent };","map":null,"metadata":{},"sourceType":"module"}