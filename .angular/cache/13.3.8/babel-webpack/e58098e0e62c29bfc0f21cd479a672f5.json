{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routing, appRoutingProviders } from './app.routing';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { AuthService } from './services/auth.service';\nimport { TokenInterceptorService } from './services/ti.service';\nimport { AuthGuard } from './auth.guard';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, FooterComponent, HeaderComponent],\n  imports: [BrowserModule.withServerTransition({\n    appId: 'serverApp'\n  }), routing, FormsModule, HttpClientModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: environment.production,\n    // Register the ServiceWorker as soon as the app is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  }), ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: environment.production,\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })],\n  providers: [AuthService, AuthGuard, appRoutingProviders, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module"}