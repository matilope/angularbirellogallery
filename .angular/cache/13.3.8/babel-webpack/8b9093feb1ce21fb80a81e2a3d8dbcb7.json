{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/paintings.service\";\nimport * as i2 from \"@angular/router\";\nexport let PaintingResolveService = /*#__PURE__*/(() => {\n  class PaintingResolveService {\n    constructor(painting, activatedRoute) {\n      this.painting = painting;\n      this.activatedRoute = activatedRoute;\n    }\n\n    resolve(route, state) {\n      this.activatedRoute.params.subscribe(params => {\n        let pinturaId = params['id'];\n      });\n      return this.painting.getPainting(this.pinturaId).pipe(catchError(error => {\n        return of('No data found');\n      }));\n    }\n\n  }\n\n  PaintingResolveService.ɵfac = function PaintingResolveService_Factory(t) {\n    return new (t || PaintingResolveService)(i0.ɵɵinject(i1.PaintingsService), i0.ɵɵinject(i2.ActivatedRoute));\n  };\n\n  PaintingResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaintingResolveService,\n    factory: PaintingResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaintingResolveService;\n})();","map":null,"metadata":{},"sourceType":"module"}