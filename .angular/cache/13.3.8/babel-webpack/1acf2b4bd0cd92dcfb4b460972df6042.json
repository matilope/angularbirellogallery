{"ast":null,"code":"import { Paintings } from '../../models/paintings';\nimport { PaintingsService } from '../../services/paintings.service';\nimport { Global } from '../../services/global';\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/paintings.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nexport let PaintingUpdateComponent = /*#__PURE__*/(() => {\n  class PaintingUpdateComponent {\n    constructor(_paintingsService, _route, _router, metaService) {\n      this._paintingsService = _paintingsService;\n      this._route = _route;\n      this._router = _router;\n      this.metaService = metaService;\n      this.afuConfig = {\n        multiple: true,\n        formatsAllowed: \".jpg,.png,.gif,.jpeg,.webp\",\n        maxSize: \"6\",\n        uploadAPI: {\n          url: Global.url + \"create\",\n          method: \"POST\"\n        },\n        theme: \"attachPin\",\n        hideProgressBar: true,\n        hideResetBtn: true,\n        hideSelectBtn: false,\n        fileNameIndex: true,\n        replaceTexts: {\n          selectFileBtn: 'Elegi el archivo',\n          resetBtn: 'Resetear',\n          uploadBtn: 'Subir',\n          dragNDropBox: 'Agarra y dejalo',\n          attachPinBtn: 'Sube la imagen de la pintura..',\n          afterUploadMsg_success: 'Subido exitosamente',\n          afterUploadMsg_error: 'Algo fallo',\n          sizeLimit: 'Limite de tamaño'\n        }\n      };\n      this.paintings = new Paintings(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", null);\n      this.title = \"Editar pintura\";\n      this.subtitle = \"Puede editar los datos\";\n      this.is_update = true;\n      this.url = Global.url;\n      this.metaService.addTag({\n        name: 'robots',\n        content: 'noindex, nofollow'\n      });\n    }\n\n    ngOnInit() {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n      this.getPintura();\n    }\n\n    onSubmit() {\n      this.suscripcion = this._paintingsService.update(this.paintings._id, this.paintings).subscribe({\n        next: response => {\n          if (response.status == \"Success\") {\n            this.status = \"Success\";\n            this.paintings = response.paints;\n            swal.fire('Se ha editado correctamente', 'Felicidades, todo un exito', 'success');\n\n            this._router.navigate([\"/painting/view/\" + this.paintings._id]);\n          } else {\n            this.status = \"Error\";\n            swal.fire('Ha ocurrido un error al editar la pintura', 'Sera redireccionado a la misma pagina para volver intentar editarlo, de todas maneras sugiero que se fije si se edito correctamente', 'warning');\n\n            this._router.navigate([\"/admin/update/\" + this.paintings._id]);\n          }\n        }\n      });\n    }\n\n    imageUpload(data) {\n      let image0url = data.body.image0url;\n      this.paintings.image0url = image0url;\n      let image1url = data.body.image1url;\n      this.paintings.image1url = image1url;\n      let image2url = data.body.image2url;\n      this.paintings.image2url = image2url;\n      let image3url = data.body.image3url;\n      this.paintings.image3url = image3url;\n      let image4url = data.body.image4url;\n      this.paintings.image4url = image4url;\n      let image5url = data.body.image5url;\n      this.paintings.image5url = image5url;\n    }\n\n    getPintura() {\n      this.suscripcion2 = this._route.params.subscribe(params => {\n        let pinturaId = params['id'];\n        this.suscripcion3 = this._paintingsService.getPainting(pinturaId).subscribe(response => {\n          if (response.paints) {\n            this.paintings = response.paints;\n          }\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      [this.suscripcion, this.suscripcion2, this.suscripcion3].forEach(e => e === null || e === void 0 ? void 0 : e.unsubscribe());\n    }\n\n  }\n\n  PaintingUpdateComponent.ɵfac = function PaintingUpdateComponent_Factory(t) {\n    return new (t || PaintingUpdateComponent)(i0.ɵɵdirectiveInject(i1.PaintingsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Meta));\n  };\n\n  PaintingUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaintingUpdateComponent,\n    selectors: [[\"app-painting-update\"]],\n    features: [i0.ɵɵProvidersFeature([PaintingsService])],\n    decls: 1,\n    vars: 0,\n    template: function PaintingUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"\\u00BF\");\n      }\n    },\n    styles: [\"\"]\n  });\n  return PaintingUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}