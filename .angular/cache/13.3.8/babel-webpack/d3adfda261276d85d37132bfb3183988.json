{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/paintings.service\";\nexport let PaintingsResolveService = /*#__PURE__*/(() => {\n  class PaintingsResolveService {\n    constructor(paintings) {\n      this.paintings = paintings;\n    }\n\n    resolve(route, state) {\n      return forkJoin(this.paintings.getPaintings(), this.paintings.getPainting(this.pinturaId)).pipe(map(data => {\n        console.log(\"paintings:\", data[0]);\n        console.log(\"painting unique:\", data[1]);\n        return {\n          paintings: data[0],\n          painting: data[1]\n        };\n      }));\n    }\n\n  }\n\n  PaintingsResolveService.ɵfac = function PaintingsResolveService_Factory(t) {\n    return new (t || PaintingsResolveService)(i0.ɵɵinject(i1.PaintingsService));\n  };\n\n  PaintingsResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaintingsResolveService,\n    factory: PaintingsResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaintingsResolveService;\n})();","map":null,"metadata":{},"sourceType":"module"}