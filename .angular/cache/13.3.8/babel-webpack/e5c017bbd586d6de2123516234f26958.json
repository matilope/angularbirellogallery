{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { PaintingsService } from '../../services/paintings.service';\nimport { Global } from '../../services/global';\nimport { json } from '../../services/json.service';\nlet PaintingComponent = class PaintingComponent {\n  constructor(_paintingsService, _route, _router, sanitizer, titleService, metaService) {\n    this._paintingsService = _paintingsService;\n    this._route = _route;\n    this._router = _router;\n    this.sanitizer = sanitizer;\n    this.titleService = titleService;\n    this.metaService = metaService;\n    this.itemLD = json;\n    this.url = Global.url;\n    titleService.setTitle(\"Paintings | Birello Gallery\");\n  }\n\n  ngOnInit() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n    this.suscripcion = this._route.params.subscribe(params => {\n      let pinturaId = params['id'];\n      this.suscripcion2 = this._paintingsService.getPainting(pinturaId).subscribe({\n        next: response => {\n          if (response.paints) {\n            this.paintings = response.paints;\n            let qe = response.paints.links.replace(/^www\\./, '').split('.').slice(0, -1).join('.');\n            console.log(qe);\n            this.metaService.updateTag({\n              property: 'og:title',\n              content: 'Birello Gallery | ' + this.paintings.titulo\n            });\n            this.metaService.updateTag({\n              property: 'og:description',\n              content: this.paintings.descripcion\n            });\n            this.metaService.updateTag({\n              property: 'og:image',\n              content: this.paintings.image0url\n            });\n            this.metaService.updateTag({\n              property: 'og:url',\n              content: 'https://www.birellogallery.com/painting/view/' + this.paintings._id\n            });\n            this.metaService.updateTag({\n              name: 'keywords',\n              content: this.paintings.titulo + \", \" + this.paintings.subtitulo\n            });\n            this.metaService.updateTag({\n              property: 'twitter:title',\n              content: 'Birello Gallery | ' + this.paintings.titulo\n            });\n            this.metaService.updateTag({\n              property: 'twitter:description',\n              content: this.paintings.descripcion\n            });\n            this.metaService.updateTag({\n              property: 'twitter:image',\n              content: this.paintings.image0url\n            });\n            this.metaService.updateTag({\n              property: 'twitter:url',\n              content: 'https://www.birellogallery.com/painting/view/' + this.paintings._id\n            });\n          } else {\n            this._router.navigate([\"/\"]);\n          }\n        }\n      });\n    });\n    this.html = this.getSafeHTML(this.itemLD);\n  }\n\n  getSafeHTML(jsonLD) {\n    const json = jsonLD ? JSON.stringify(jsonLD, null, 2).replace(/<\\/script>/g, '<\\\\/script>') : ''; // escape / to prevent script tag in JSON\n\n    const html = `<script type=\"application/ld+json\">${json}</script>`;\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n\n  lightbox(i) {\n    let body = document.querySelector(\"body\");\n    body.style.overflow = \"hidden\";\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n    let div = document.createElement(\"div\");\n    body.appendChild(div);\n    let imagenes = document.querySelectorAll(\".room-preview img\");\n    let roomPreview = document.querySelector(\".room-preview\");\n    let next = document.createElement(\"img\");\n    let volver = document.createElement(\"img\");\n    let close = document.createElement(\"img\");\n    div.appendChild(next);\n    div.appendChild(volver);\n    div.appendChild(close);\n    next.src = \"assets/img/gallery/next.png\";\n    next.style.width = \"50px\";\n    next.style.height = \"45px\";\n    next.style.position = \"absolute\";\n    next.style.right = \"0\";\n    next.style.cursor = \"pointer\";\n    volver.src = \"assets/img/gallery/prev.png\";\n    volver.style.width = \"50px\";\n    volver.style.height = \"45px\";\n    volver.style.position = \"absolute\";\n    volver.style.left = \"0\";\n    volver.style.cursor = \"pointer\";\n    close.style.position = \"absolute\";\n    close.style.right = \"20px\";\n    close.style.top = \"20px\";\n    close.style.cursor = \"pointer\";\n    close.src = \"assets/img/gallery/close.png\";\n    div.style.height = \"100vh\";\n    div.style.width = \"100%\";\n    div.style.position = \"absolute\";\n    div.style.top = \"0\";\n    div.style.background = \"rgb(0,0,0,0.6)\";\n    div.style.display = \"flex\";\n    div.style.flexDirection = \"column\";\n    div.style.alignItems = \"center\";\n    div.style.justifyContent = \"center\";\n    div.style.overflow = \"hidden\";\n    let index = i;\n\n    for (let i = 0; i < imagenes.length; i++) {\n      imagenes[i].classList.remove(\"room-active-prevg\");\n      div.appendChild(imagenes[i]);\n      imagenes[i].loading = \"lazy\";\n      imagenes[i].classList.add(\"noneevents\");\n    }\n\n    for (index = 0; index < imagenes.length; index++) {\n      imagenes[index].classList.remove(\"activo\");\n    }\n\n    imagenes[i].classList.add(\"activo\");\n    index = i;\n    next.addEventListener('click', () => {\n      if (index >= imagenes.length - 1) {} else {\n        imagenes[index].classList.remove('activo');\n        index++;\n        imagenes[index].classList.add('activo');\n      }\n    });\n    volver.addEventListener('click', () => {\n      if (index <= 0) {} else {\n        imagenes[index].classList.remove('activo');\n        index--;\n        imagenes[index].classList.add('activo');\n      }\n    });\n    close.addEventListener('click', () => {\n      div.style.animation = \"disappears 1s\";\n      setTimeout(() => {\n        div.style.display = \"none\";\n      }, 1000);\n      body.style.overflow = \"visible\";\n\n      for (let i = 0; i < imagenes.length; i++) {\n        imagenes[i].classList.add(\"room-active-prevg\");\n        imagenes[i].classList.remove(\"noneevents\");\n        roomPreview.appendChild(imagenes[i]);\n      }\n    });\n\n    (() => {\n      setTimeout(() => {\n        if (div.getBoundingClientRect().top < -20) {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n          });\n        }\n      }, 1000);\n    })();\n  }\n\n  ngOnDestroy() {\n    [this.suscripcion, this.suscripcion2].forEach(e => e === null || e === void 0 ? void 0 : e.unsubscribe());\n  }\n\n};\nPaintingComponent = __decorate([Component({\n  selector: 'app-painting',\n  templateUrl: './painting.component.html',\n  styleUrls: ['./painting.component.css'],\n  providers: [PaintingsService]\n})], PaintingComponent);\nexport { PaintingComponent };","map":null,"metadata":{},"sourceType":"module"}