{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, ElementRef, Host, ViewChildren } from '@angular/core';\nimport { PaintingsService } from 'src/app/services/paintings.service';\nimport { Global } from '../../services/global';\nlet HomeComponent = class HomeComponent {\n  constructor(titleService, metaService, activatedRoute, paintingService) {\n    this.titleService = titleService;\n    this.metaService = metaService;\n    this.activatedRoute = activatedRoute;\n    this.paintingService = paintingService;\n    this.animation = false;\n    this.currentPage = 1;\n    this.loader = false;\n    this.principal = 'Artworks';\n    this.subtitulo = \"Buying art is buying time of the artist's life.\";\n    this.url = Global.url;\n    this.metaService.updateTag({\n      property: 'og:title',\n      content: 'Birello Gallery | Artworks'\n    });\n    this.metaService.updateTag({\n      property: 'og:description',\n      content: this.subtitulo\n    });\n    this.metaService.updateTag({\n      name: 'keywords',\n      content: 'Buying art, investments, art investments, gallery, birello, birello gallery'\n    });\n    this.metaService.updateTag({\n      property: 'twitter:title',\n      content: 'Birello Gallery | Artworks'\n    });\n    this.metaService.updateTag({\n      property: 'twitter:description',\n      content: this.subtitulo\n    });\n  }\n\n  ngOnInit() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    }); //  window.addEventListener('scroll', function () {\n    //    let card = document.querySelectorAll('.card');\n    //    for (let i = 6; i < card.length; i++) {\n    //      let position = card[i].getBoundingClientRect().top;\n    //      let screen = window.innerHeight;\n    //      if (position < screen) {\n    //        card[i].classList.add('animacion');\n    //      } else {\n    //        card[i].classList.remove('animacion');\n    //      }\n    //    }\n    //  });\n\n    this.loader = true;\n    this.suscripcion = this.paintingService.getPaintingsPagination(this.currentPage).subscribe({\n      next: response => {\n        this.animation = true;\n        this.loader = false;\n        this.paintings = response.paints.sort(() => {\n          return 0.5 - Math.random();\n        });\n        this.totalPages = response.results.total;\n      }\n    });\n    this.intersectionObserver();\n  }\n\n  ngAfterViewInit() {\n    this.suscripcion3 = this.theLastList.changes.subscribe({\n      next: response => {\n        if (response.last) {\n          this.observer.observe(response.last.nativeElement);\n        }\n      }\n    });\n  }\n\n  paintingsData() {\n    this.loader = true;\n    this.suscripcion2 = this.paintingService.getPaintingsPagination(this.currentPage).subscribe({\n      next: response => {\n        this.loader = false;\n        response.paints.sort(() => {\n          return 0.5 - Math.random();\n        }).forEach(e => {\n          this.paintings.push(e);\n        });\n        this.totalPages = response.results.total;\n      }\n    });\n  }\n\n  intersectionObserver() {\n    let options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.5\n    };\n    this.observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n          this.paintingsData();\n        }\n      }\n    }, options);\n  }\n\n  ngOnDestroy() {\n    [this.suscripcion, this.suscripcion2, this.suscripcion3].forEach(e => e === null || e === void 0 ? void 0 : e.unsubscribe());\n    this.animation = false;\n    this.loader = false;\n  }\n\n};\n\n__decorate([ViewChildren('theLastList', {\n  read: ElementRef\n})], HomeComponent.prototype, \"theLastList\", void 0);\n\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  providers: [PaintingsService]\n}), __param(4, Host())], HomeComponent);\nexport { HomeComponent };","map":null,"metadata":{},"sourceType":"module"}