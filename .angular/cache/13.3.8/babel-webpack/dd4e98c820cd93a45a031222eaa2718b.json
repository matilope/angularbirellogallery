{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { Global } from './global';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PaintingsService = /*#__PURE__*/(() => {\n  class PaintingsService {\n    constructor(_http) {\n      this._http = _http;\n      this.url = Global.url;\n    }\n\n    resolve(route, state) {\n      let pinturaId = route.params['id'];\n      return this._http.get(this.url + \"painting/\" + pinturaId).pipe(catchError(error => {\n        return of('No data found');\n      }));\n    }\n\n    getPaintings() {\n      return this._http.get(this.url + \"paintings\");\n    }\n\n    getPainting(pinturaId) {\n      return this._http.get(this.url + \"painting/\" + pinturaId);\n    }\n\n    create(pintura) {\n      let params = JSON.stringify(pintura);\n      let headers = new HttpHeaders().set('Content-Type', 'application/json');\n      return this._http.post(this.url + \"save\", params, {\n        headers: headers\n      });\n    }\n\n    update(id, pintura) {\n      let params = JSON.stringify(pintura);\n      let headers = new HttpHeaders().set('Content-Type', 'application/json');\n      return this._http.put(this.url + \"painting/\" + id, params, {\n        headers: headers\n      });\n    }\n\n    delete(id) {\n      let headers = new HttpHeaders().set('Content-Type', 'application/json');\n      return this._http.delete(this.url + \"painting/\" + id, {\n        headers: headers\n      });\n    }\n\n  }\n\n  PaintingsService.ɵfac = function PaintingsService_Factory(t) {\n    return new (t || PaintingsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PaintingsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaintingsService,\n    factory: PaintingsService.ɵfac\n  });\n  return PaintingsService;\n})();","map":null,"metadata":{},"sourceType":"module"}