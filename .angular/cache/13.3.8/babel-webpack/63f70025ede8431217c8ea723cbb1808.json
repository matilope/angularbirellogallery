{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { routing, appRoutingProviders } from './app.routing';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AuthService } from './services/auth.service';\nimport { TokenInterceptorService } from './services/ti.service';\nimport { AuthGuard } from './auth.guard';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { PaintingsResolveService } from './resolve/paintingsresolve.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/service-worker\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AuthService, AuthGuard, PaintingsResolveService, appRoutingProviders, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n    imports: [[BrowserModule.withServerTransition({\n      appId: 'serverApp'\n    }), routing, FormsModule, HttpClientModule, ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }), ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}