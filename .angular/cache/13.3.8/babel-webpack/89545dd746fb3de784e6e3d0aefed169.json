{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/instagram.service\";\nimport * as i2 from \"@angular/router\";\nexport let MiscellaneousResolveService = /*#__PURE__*/(() => {\n  class MiscellaneousResolveService {\n    constructor(instagram, activatedRoute) {\n      this.instagram = instagram;\n      this.activatedRoute = activatedRoute;\n    }\n\n    resolve(route, state) {\n      this.activatedRoute.data.subscribe({\n        next: response => {\n          console.log(response);\n\n          if (response.token) {\n            this.token = response.token.token.token;\n            console.log(this.token);\n          }\n        }\n      });\n      return this.instagram.getInstagram(this.token).pipe(catchError(error => {\n        return of('No data found');\n      }));\n    }\n\n  }\n\n  MiscellaneousResolveService.ɵfac = function MiscellaneousResolveService_Factory(t) {\n    return new (t || MiscellaneousResolveService)(i0.ɵɵinject(i1.InstagramService), i0.ɵɵinject(i2.ActivatedRoute));\n  };\n\n  MiscellaneousResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MiscellaneousResolveService,\n    factory: MiscellaneousResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return MiscellaneousResolveService;\n})();","map":null,"metadata":{},"sourceType":"module"}