{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Global } from '../services/global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let PaintingDeleteResolveService = /*#__PURE__*/(() => {\n  class PaintingDeleteResolveService {\n    constructor(activatedRoute, _http) {\n      this._http = _http;\n      this.url = Global.url;\n    }\n\n    resolve(route, state) {\n      let pinturaId = route.params['id']; // Getting specific painting\n\n      return this._http.delete(this.url + \"painting/\" + pinturaId).pipe(catchError(error => {\n        return of('No data found');\n      }));\n    }\n\n  }\n\n  PaintingDeleteResolveService.ɵfac = function PaintingDeleteResolveService_Factory(t) {\n    return new (t || PaintingDeleteResolveService)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  PaintingDeleteResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaintingDeleteResolveService,\n    factory: PaintingDeleteResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaintingDeleteResolveService;\n})();","map":null,"metadata":{},"sourceType":"module"}