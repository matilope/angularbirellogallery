{"ast":null,"code":"import swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(_auth, _router, metaService) {\n      this._auth = _auth;\n      this._router = _router;\n      this.metaService = metaService;\n      this.registerUserData = {\n        email: \"\",\n        password: \"\",\n        secret: \"\"\n      };\n      this.metaService.addTag({\n        name: 'robots',\n        content: 'noindex, nofollow'\n      });\n    }\n\n    ngOnInit() {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    registerUser() {\n      if (this._auth.registerUser(this.registerUserData) !== undefined) {\n        this.suscripcion = this._auth.registerUser(this.registerUserData).subscribe({\n          next: response => {\n            localStorage.setItem('token_birello_gallery_admin', response.token);\n            swal.fire('Te has registrado correctamente', 'Cuidado !, el uso del registro de un personal no autorizado puede enfrentar denuncia por irrumpimiento de las condiciones de la pagina', 'success');\n\n            this._router.navigate(['/admin']);\n          },\n          error: () => {\n            swal.fire('Ha ocurrido un error al registrarse', 'La clave secreta que ha colocado es incorrecta o no ha colocado ninguna', 'warning');\n\n            this._router.navigate(['/404']);\n          }\n        });\n      } else {\n        swal.fire('Ha ocurrido un error al registrarse', 'La clave secreta que ha colocado es incorrecta o no ha colocado ninguna', 'warning');\n\n        this._router.navigate(['/404']);\n      }\n    }\n\n    ngOnDestroy() {\n      var _a;\n\n      (_a = this.suscripcion) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Meta));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"adminregistermain\"], [1, \"adminregistersection\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"c-col\", \"col-10\", \"col-sm-10\", \"col-md-8\", \"col-lg-6\", \"enquiryform\"], [1, \"card-header\"], [1, \"mb-0\", 2, \"color\", \"white\", \"font-size\", \"21px\"], [1, \"card-body\", 2, \"border\", \"none\", \"height\", \"auto\"], [1, \"form\"], [1, \"form-group\"], [\"for\", \"email\", 2, \"color\", \"white\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 2, \"color\", \"white\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"secret\", 2, \"color\", \"white\"], [\"type\", \"text\", \"id\", \"secret\", \"name\", \"secret\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"float-right\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\", 0)(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h1\", 6);\n        i0.ɵɵtext(7, \"Registro\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"label\", 10);\n        i0.ɵɵtext(12, \"Usuario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.registerUserData.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 9)(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.registerUserData.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 9)(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Secret\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.registerUserData.secret = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_22_listener() {\n          return ctx.registerUser();\n        });\n        i0.ɵɵtext(23, \"Registrarse\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.registerUserData.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.registerUserData.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.registerUserData.secret);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}