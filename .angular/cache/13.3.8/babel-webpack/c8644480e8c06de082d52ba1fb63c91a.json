{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Paintings } from '../../models/paintings';\nimport { PaintingsService } from '../../services/paintings.service';\nimport { Global } from '../../services/global';\nimport swal from 'sweetalert2';\nlet PaintingUpdateComponent = class PaintingUpdateComponent {\n  constructor(_paintingsService, _route, _router, metaService) {\n    this._paintingsService = _paintingsService;\n    this._route = _route;\n    this._router = _router;\n    this.metaService = metaService;\n    this.afuConfig = {\n      multiple: true,\n      formatsAllowed: \".jpg,.png,.gif,.jpeg,.webp\",\n      maxSize: \"6\",\n      uploadAPI: {\n        url: Global.url + \"create\",\n        method: \"POST\"\n      },\n      theme: \"attachPin\",\n      hideProgressBar: true,\n      hideResetBtn: true,\n      hideSelectBtn: false,\n      fileNameIndex: true,\n      replaceTexts: {\n        selectFileBtn: 'Elegi el archivo',\n        resetBtn: 'Resetear',\n        uploadBtn: 'Subir',\n        dragNDropBox: 'Agarra y dejalo',\n        attachPinBtn: 'Sube la imagen de la pintura..',\n        afterUploadMsg_success: 'Subido exitosamente',\n        afterUploadMsg_error: 'Algo fallo',\n        sizeLimit: 'Limite de tamaÃ±o'\n      }\n    };\n    this.paintings = new Paintings(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", null);\n    this.title = \"Editar pintura\";\n    this.subtitle = \"Puede editar los datos\";\n    this.is_update = true;\n    this.url = Global.url;\n    this.metaService.addTag({\n      name: 'robots',\n      content: 'noindex, nofollow'\n    });\n  }\n\n  ngOnInit() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n    this.getPintura();\n  }\n\n  onSubmit() {\n    this.suscripcion = this._paintingsService.update(this.paintings._id, this.paintings).subscribe({\n      next: response => {\n        if (response.status == \"Success\") {\n          this.status = \"Success\";\n          this.paintings = response.paints;\n          swal.fire('Se ha editado correctamente', 'Felicidades, todo un exito', 'success');\n\n          this._router.navigate([\"/painting/view/\" + this.paintings._id]);\n        } else {\n          this.status = \"Error\";\n          swal.fire('Ha ocurrido un error al editar la pintura', 'Sera redireccionado a la misma pagina para volver intentar editarlo, de todas maneras sugiero que se fije si se edito correctamente', 'warning');\n\n          this._router.navigate([\"/admin/update/\" + this.paintings._id]);\n        }\n      }\n    });\n  }\n\n  imageUpload(data) {\n    let image0url = data.body.image0url;\n    this.paintings.image0url = image0url;\n    let image1url = data.body.image1url;\n    this.paintings.image1url = image1url;\n    let image2url = data.body.image2url;\n    this.paintings.image2url = image2url;\n    let image3url = data.body.image3url;\n    this.paintings.image3url = image3url;\n    let image4url = data.body.image4url;\n    this.paintings.image4url = image4url;\n    let image5url = data.body.image5url;\n    this.paintings.image5url = image5url;\n  }\n\n  getPintura() {\n    this.suscripcion2 = this._route.params.subscribe(params => {\n      let pinturaId = params['id'];\n      this.suscripcion3 = this._paintingsService.getPainting(pinturaId).subscribe(response => {\n        if (response.paints) {\n          this.paintings = response.paints;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    [this.suscripcion, this.suscripcion2, this.suscripcion3].forEach(e => e === null || e === void 0 ? void 0 : e.unsubscribe());\n  }\n\n};\nPaintingUpdateComponent = __decorate([Component({\n  selector: 'app-painting-update',\n  templateUrl: './painting-update.component.html',\n  styleUrls: ['./painting-update.component.css'],\n  providers: [PaintingsService]\n})], PaintingUpdateComponent);\nexport { PaintingUpdateComponent };","map":null,"metadata":{},"sourceType":"module"}