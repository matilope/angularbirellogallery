{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Global } from '../services/global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/paintings.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nexport let PaintingResolveService = /*#__PURE__*/(() => {\n  class PaintingResolveService {\n    constructor(painting, activatedRoute, _http) {\n      this.painting = painting;\n      this.activatedRoute = activatedRoute;\n      this._http = _http;\n      this.url = Global.url;\n    }\n\n    resolve(route, state) {\n      let pinturaId = route.params['id'];\n      return this.painting.getPainting(pinturaId).pipe(catchError(error => {\n        return of('No data found');\n      }));\n    }\n\n  }\n\n  PaintingResolveService.ɵfac = function PaintingResolveService_Factory(t) {\n    return new (t || PaintingResolveService)(i0.ɵɵinject(i1.PaintingsService), i0.ɵɵinject(i2.ActivatedRoute), i0.ɵɵinject(i3.HttpClient));\n  };\n\n  PaintingResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaintingResolveService,\n    factory: PaintingResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaintingResolveService;\n})();","map":null,"metadata":{},"sourceType":"module"}